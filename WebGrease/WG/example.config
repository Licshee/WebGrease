<?xml version="1.0" encoding="utf-8"?>
<WebGrease>
  <Settings>
    <!-- Folders where static images to be autnamed/hashed can be found -->
    <ImageDirectories>css\images;f2/i</ImageDirectories>
    <ImageExtensions>png;jpg;jpeg;gif;ico</ImageExtensions>

    <!-- If unspecified, the Source will be used -->
    <TokensDirectory>App</TokensDirectory>
    <!-- subdirectory of above  -->
    <OverrideTokensDirectory>Site1</OverrideTokensDirectory>
  </Settings>

  <!-- 
  name: 
  output: 
    This can be a single file (must end with extension. 
    If so input must be single file or doing bundling) or directory (input is copied to it, with BaseInDir stemmed). If blank, current directory is used.
  -->
  <CssFileSet name="Sample" output="output\css">
    
    <!--Minification Settings-->
    <Minification config="Debug">
      <!-- disables minification for the debug config type-->
      <Minify>False</Minify>
      <!--Selectors that should be considered invalid and have an error raised if used-->
      <ProhibitedSelectors>*>html,html>body</ProhibitedSelectors>
    </Minification>
    <!-- The names of the configs are freeform fields, and not limited to Debug/Release.
        The config type to use can be specified as a parameter.
    -->
    <Minification config="Release">
      <Minify>True</Minify>
      <ProhibitedSelectors>*>html,html>body</ProhibitedSelectors>
    </Minification>
     
    <!-- Spriting Settings -->
    <Spriting config="Debug">
      <!-- The default value for FileSet operation settings is "true",
           So they must be explicitly set off if the particular operation (like spriting)
           should skip this file set.
      -->
      <SpriteImages>false</SpriteImages>
    </Spriting>
    <Spriting config="Release">
      <SpriteImages>false</SpriteImages>
    </Spriting>

    <!--AutoNaming (Hashing) -->
    <Autoname config="Debug">
      <RenameFiles>false</RenameFiles>
    </Autoname>
    <!--There is no Release config defined here. 
    If the autonaming operation was run with a config type of "Release",
    The default values for that configuration would be used instead.
    When no config type is specified on the command line when using a config file,
    the first configuration found for the operation is used (in this case, debug)
    -->
    
    <!--Bundling-->
    <Bundling config="Debug">
      <!-- This file set doesn't have a file specified for output (it has a folder),
        So running the bundling operation on this set will result in an error.
      -->
      <AssembleFiles>false</AssembleFiles>
    </Bundling>
    <Bundling config="Release">
      <AssembleFiles>false</AssembleFiles>
    </Bundling>

    <!-- locales for which there are different resx files to build variations for -->
    <Locales>en-us;fr-ca</Locales>

    <!-- themes for which there are different resx files to build variations for -->
    <Themes>red;blue</Themes>

    <!-- 
    Each input may be a file or a dir. If it is not rooted (starts with '\' or 'X:' etc.), then the BaseInDir (default's to current execution path) is combined with it.
    With the resulting full path, it's a file or a directory determined by exists.
    For directories, they can have a pattern (defaults to '*.[type]') and a SearchOption (defaults to AllDirectories, aka recursive).
    -->
    <Inputs>
      <!-- just get this from combining with [BaseInDir] -->
      <Input>css\site.css</Input>

      <!-- will get this regardless of BaseInDir 
      <Input>f:\webgrease files\css\site.css</Input>-->

      <!-- will recursively get everything under [BaseInDir] + css\*.css -->
      <Input>css\</Input>

      <!-- will get first dir level files under [BaseInDir] + realworldcss\*.css -->
      <Input searchPattern="*.css" searchOption="TopDirectoryOnly">realworldcss</Input>
    </Inputs>
  </CssFileSet>

  
  
  <JsFileSet name="Sample" output="output\js">
    
    <!--Minification-->
    <Minification config="Debug">
      <!-- Minify the files -->
      <Minify>False</Minify>
      <!-- Ajax Minify style arguments-->
      <MinifyArguments>-h -d -m -k</MinifyArguments>
      <!-- JS Globals that will not get altered (semicolon delimited)-->
      <GlobalsToIgnore>jQuery;Msn</GlobalsToIgnore>
    </Minification>    
    <Minification config="Release">
      <Minify>True</Minify>
      <MinifyArguments>-h -d -m -k</MinifyArguments>
      <GlobalsToIgnore>jQuery;Msn</GlobalsToIgnore>
    </Minification>

    <!-- Validation of Javascript.-->
    <Validation config="Debug">
      <!-- Analyze the javascript in the files-->
      <Analyze>True</Analyze>
      <AnalyzeArguments>-analyze -WARN:4</AnalyzeArguments>
    </Validation>
    <Validation config="Release">
      <Analyze>True</Analyze>
      <AnalyzeArguments>-analyze -WARN:4</AnalyzeArguments>
    </Validation>
    
    <!--AutoNaming (Hashing) -->
    <Autoname config="Debug">
      <RenameFiles>false</RenameFiles>
    </Autoname>
  
    <!--Bundling-->
    <Bundling config="Debug">
      <AssembleFiles>false</AssembleFiles>
    </Bundling>
    <Bundling config="Release">
      <AssembleFiles>false</AssembleFiles>
    </Bundling>

    <!-- locales for which there are different resx files to build variations for, same as css -->
    <Locales>en-us;fr-ca</Locales>

    <!-- inputs work the same as for css -->
    <Inputs>
      <Input searchPattern="*.js" searchOption="TopDirectoryOnly">js</Input>
    </Inputs>
  </JsFileSet>

  <CssFileSet name="SpriteSample" output="output\css">
    <Spriting config="Debug">
      <SpriteImages>false</SpriteImages>
      <AutoVersionBackgroundImages>false</AutoVersionBackgroundImages>
    </Spriting>
    <Spriting config="Release">
      <SpriteImages>true</SpriteImages>
      <AutoVersionBackgroundImages>true</AutoVersionBackgroundImages>
    </Spriting>
    <Minification config="Release">
      <Minify>false</Minify>
    </Minification>
    <Inputs>
      <Input>css\spritetest.css</Input>
    </Inputs>
  </CssFileSet>

  <CssFileSet name="BundlingSample" output="output\css\Bundle.css">
    <Bundling config="Debug">
      <AssembleFiles>true</AssembleFiles>
    </Bundling>
    <Bundling config="Release">
      <AssembleFiles>true</AssembleFiles>
    </Bundling>
    <Spriting config="Release">
      <SpriteImages>false</SpriteImages>
    </Spriting>
    <Minification config="Release">
      <Minify>false</Minify>
    </Minification>
    <Inputs>
      <Input searchPattern="*.css">css</Input>
    </Inputs>
  </CssFileSet>
  

</WebGrease>